namespace sandpit.Rule_Set;

/*
@OData.publish : true

context somedata {
	entity table {
	key primary_key		: Integer not null;
		text			: String(10);
	};
	entity table2 {
	key primary_key		: Integer not null;
		text			: String(10);
		association     : association[1..1] to table { primary_key };
	};
    entity MD_MODULE {
        key MODULE_ID   : String(10) not null;
            MODULE_NAME : String(60) not null;
    };

}
 */

@OData.publish : false
context ruleSet {

    /*@@layout{"layoutInfo":{"x":348,"y":-45.5}}*/
    entity module {
        key moduleId    : String(10) not null;
            moduleName  : String(60) not null;
            toSubModule : association[0..*] to subModule on toSubModule.moduleId = moduleId; /*Out*/
            toActivity  : association[0..*] to activity  on toActivity.moduleId = moduleId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":718,"y":-93.5}}*/
    entity subModule {
        key moduleId      : String(10) not null; /*Association*/
        key subModuleId   : String(10) not null;
            subModuleName : String(60) not null;
            toModule      : association[1] to module   on toModule.moduleId = moduleId; /*In*/
            toActivity    : association[1] to activity on toActivity.subModuleId = subModuleId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":1129,"y":1087.5}}*/
    entity processes {
        key processId         : String(10) not null;
            processName       : String(60) not null;
            toSubProcesses    : association[0..*] to subProcesses    on toSubProcesses.processId = processId; /*Out*/
            toActivity        : association[0..*] to activity        on toActivity.processId = processId; /*Out*/
            toBusinessControl : association[0..*] to businessControl on toBusinessControl.processId = processId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":719,"y":1244.5}}*/
    entity subProcesses {
        key processId         : String(10) not null; /*Association*/
        key subProcessId      : String(10) not null;
            subProcessName    : String(60) not null;
            toProcesses       : association[1]    to processes       on toProcesses.processId = processId; /*In*/
            toActivity        : association[0..*] to activity        on toActivity.subProcessId = subProcessId; /*Out*/
            tobusinessControl : association[0..*] to businessControl on tobusinessControl.subProcessId = subProcessId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":1281,"y":176.5}}*/
    entity tstc {
        key tcode      : String(20) not null;
            pgmna      : String(40);
            dypno      : Integer;
            menue      : String(5);
            cinfo      : Integer;
            arbgb      : String(20);
            ttext      : String(60);
            toActTcode : association[0..*] to actTcode on toActTcode.tcode = tcode; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":1256,"y":532.5}}*/
    entity tobjt {
            langu     : String(10) not null;
        key object    : String(10) not null;
            ttext     : String(60);
            toActAuth : association[0..*] to actAuth on toActAuth.object = object; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":445,"y":978.5}}*/
    entity customers {
        key custId           : String(10) not null;
            companyName      : String(60) not null;
            toLogicalSystems : association[0..*] to logicalSystems on toLogicalSystems.custId = custId; /*Out*/
            toUsers          : association[0..*] to users          on toUsers.custId = custId; /*Out*/
            toRuleSet        : association[0..*] to ruleSet        on toRuleSet.custId = custId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":1145,"y":937.5}}*/
    entity logicalSystems {
        key custId      : String(10) not null; /*Association*/
        key sysId       : String(60) not null;
        key clientId    : String(10) not null;
            toCustomers : association[1] to customers on toCustomers.custId = custId; /*In*/
    };


    /*@@layout{"layoutInfo":{"x":72,"y":813.5}}*/
    entity users {
        key custId                   : String(10) not null; /*Association*/
        key userId                   : String(60) not null;
            firstName                : String(60) not null;
            lastName                 : String(60) not null;
            email                    : String(60) not null;
            startDate                : String(60);
            endDate                  : String(60);
            timeZone                 : String(10);
            adminAccess              : Boolean;
            toCustomers              : association[1]    to customers       on toCustomers.custId = custId; /*In*/
            toRuleSet                : association[0..*] to ruleSet         on toRuleSet.owner = userId; /*Out*/
            toActivity               : association[0..*] to activity        on toActivity.owner = userId; /*Out*/
            toTests                  : association[0..*] to tests           on toTests.owner = userId; /*Out*/
            toBusinessControlOwner   : association[0..*] to businessControl on toBusinessControlOwner.owner = userId; /*Out*/
            toBusinessControlMonitor : association[0..*] to businessControl on toBusinessControlMonitor.monitor = userId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":33,"y":9.5}}*/
    entity ruleSet {
        key custId            : String(10) not null; /*Association*/
        key rsId              : String(10) not null;
            rsName            : String(60) not null;
            description       : LargeString;
            active            : Boolean;
            globalOrCustomer  : String(60) not null;
            owner             : String(60) not null; /*Association*/
            workflowFlag      : Boolean;
            toCustomer        : association[1]    to customers       on toCustomer.custId = custId; /*In*/
            toUsers           : association[1]    to users           on toUsers.userId = owner; /*In*/
            toActivity        : association[0..*] to activity        on toActivity.rsId = rsId; /*Out*/
            toTests           : association[0..*] to tests           on toTests.rsId = rsId; /*Out*/
            toRisks           : association[0..*] to risks           on toRisks.rsId = rsId; /*Out*/
            toRiskRating      : association[0..*] to riskRating      on toRiskRating.rsId = rsId; /*Out*/
            toRiskTest        : association[0..*] to riskTest        on toRiskTest.rsId = rsId; /*Out*/
            toBusinessControl : association[0..*] to businessControl on toBusinessControl.rsId = rsId; /*Out*/

    };

    /*@@layout{"layoutInfo":{"x":422,"y":329.5}}*/
    entity activity {
        key actId          : String(10) not null;
            actName        : String(60) not null;
            rsId           : String(10) not null; /*Association*/
            active         : Boolean;
            severity       : String(60) not null;
            moduleId       : String(10) not null; /*Association*/
            subModuleId    : String(10); /*Association*/
            owner          : String(60); /*Association*/
            processId      : String(10); /*Association*/
            subProcessId   : String(10); /*Association*/
            workflowFlag   : Boolean;
            toRuleSet      : association[1]    to ruleSet      on toRuleSet.rsId = rsId; /*In*/
            toModule       : association[1]    to module       on toModule.moduleId = moduleId; /*In*/
            toSubModule    : association[1]    to subModule    on toSubModule.subModuleId = subModuleId; /*In*/
            toUsers        : association[1]    to users        on toUsers.userId = owner; /*In*/
            toProcesses    : association[1]    to processes    on toProcesses.processId = processId; /*In*/
            toSubProcesses : association[1]    to subProcesses on toSubProcesses.subProcessId = subProcessId; /*In*/
            toActTcode     : association[0..*] to actTcode     on toActTcode.actId = actId; /*Out*/
            toActAuth      : association[0..*] to actAuth      on toActAuth.actId = actId; /*Out*/
            toTestActivity : association[0..*] to testActivity on toTestActivity.actId = actId; /*Out*/


    };

    /*@@layout{"layoutInfo":{"x":877,"y":264.5}}*/
    entity actTcode {
        key actId       : String(10); /*Association*/
            active      : Boolean;
        key tcode       : String(20); /*Association*/
        key groupNumber : Integer not null;
            toActivity  : association[1] to activity on toActivity.actId = actId; /*In*/
            toTstc      : association[1] to tstc     on toTstc.tcode = tcode; /*In*/
    };

    /*@@layout{"layoutInfo":{"x":927,"y":511.5}}*/
    entity actAuth {
        key actId         : String(10) not null; /*Association*/
        key groupNumber   : Integer    not null;
        key object        : String(60) not null; /*Association*/
        key authField     : String(20) not null;
        key authValues    : String(20) not null;
            logicOperator : Integer    not null;
            active        : Boolean;
            toActivity    : association[1] to activity on toActivity.actId = actId; /*In*/
            toTobjt       : association[1] to tobjt    on toTobjt.object = object; /*In*/

    };


    /*@@layout{"layoutInfo":{"x":-526,"y":460.5}}*/
    entity tests {
        key tstId                  : String(10) not null;
            tstName                : String(60) not null;
        key rsId                   : String(10) not null; /*Association*/
            active                 : Boolean;
            description            : String(1000);
            owner                  : String(60) not null; /*Association*/
            workflowFlag           : Boolean;
            toRuleSet              : association[1]    to ruleSet              on toRuleSet.rsId = rsId; /*In*/
            toUsers                : association[1]    to users                on toUsers.userId = owner; /*In*/
            toTestActivity         : association[0..*] to testActivity         on toTestActivity.tstId = tstId; /*Out*/
            toRiskTest             : association[0..*] to riskTest             on toRiskTest.tstId = tstId; /*Out*/
            toTestsBusinessControl : association[0..*] to testsBusinessControl on toTestsBusinessControl.tstId = tstId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":-533,"y":221.5}}*/
    entity testActivity {
        key tstId      : String(10) not null; /*Association*/
        key actId      : String(10) not null; /*Association*/
            toTests    : association[1] to tests    on toTests.tstId = tstId; /*In*/
            toActivity : association[1] to activity on toActivity.actId = actId; /*In*/

    };

    /*@@layout{"layoutInfo":{"x":186,"y":-338.5}}*/
    entity risks {
        key riskId       : String(10) not null;
        key rsId         : String(10) not null; /*Association*/
            riskName     : String(60) not null;
            riskRating   : String(60) /*not null*/; /*add back after values confirmed*/ /*Is this required?*/
            riskCat      : String(60) /*not null*/; /*add back after values confirmed*/ /*Is this required?*/
            workflowFlag : Boolean;
            toRuleSet    : association[1] to ruleSet on toRuleSet.rsId=rsId; /*In*/
            toRiskTest	:association[1] to riskTest on toRiskTest.riskId=riskId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":-733,"y":-73.5}}*/
    entity riskRating {
        key riskRatingId              : String(10) not null; /*Association*/
        key rsId                      : String(10) not null; /*Association*/
            consequence               : Integer    not null;
            likelihood                : Integer    not null;
            cXl                       : Integer    not null;
            cl                        : Integer;
            defaultMatrixRating       : String(20);
            range                     : Integer;
            defaultRiskClassification : String(10);
            defaultRiskRange          : String(20);
            toRuleSet                 : association[1]    to ruleSet  on toRuleSet.rsId = rsId; /*In*/
            toRiskTest                : association[0..*] to riskTest on toRiskTest.riskRatingId = riskRatingId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":-291,"y":-388.5}}*/
    entity riskTest {
        key rsId                     : String(10) not null; /*Association*/
        key tstId                    : String(10) not null; /*Association*/
        key riskId	:String(10) not null;/*Association*/
        key riskRatingId             : String(10) not null; /*Association*/
            annualisedLossExpectancy : Decimal(15, 2);
            estimatedAnnualisedLoss  : Decimal(15, 2);
            aleProbability           : Decimal(15, 10);
            bestCaseRiskEventImpact  : Decimal(15, 2);
            expectedRiskEventImpact  : Decimal(15, 2);
            worstCaseRiskEventImpact : Decimal(15, 2);
            bestCaseRiskEventFreq    : Decimal(15, 2);
            expectedRiskEventFreq    : Decimal(15, 2);
            worstCaseRiskEventFreq   : Decimal(15, 2);
            monteCarloImpact         : Decimal(15, 2);
            monteCarloFreq           : Decimal(15, 2);
            deterministic            : Decimal(15, 2);
            monteCarloOutput         : Decimal(15, 2);
            toRuleSet                : association[1] to ruleSet    on toRuleSet.rsId = rsId; /*In*/
            toTests                  : association[1] to tests      on toTests.tstId = tstId; /*In*/
            toRisks	:association[1] to risks on toRisks.riskId=riskId; /*In*/
            toRiskRating             : association[1] to riskRating on toRiskRating.riskRatingId = riskRatingId; /*In*/
    };

    /*@@layout{"layoutInfo":{"x":-374,"y":957.5}}*/
    entity businessControl {
        key bcId                   : String(10) not null;
        key rsId                   : String(10) not null; /*Association*/
            bcName                 : String(60) not null;
            active                 : Boolean;
            type                   : String(60) not null;
            program                : String(1000);
            frequency              : String(60) not null;
            owner                  : String(60) not null; /*Association*/
            processId              : String(10) not null; /*Association*/
            subProcessId           : String(10) not null; /*Association*/
            description            : String(1000);
            variant                : String(60);
            monitor                : String(60) not null; /*Association*/
            workflowFlag           : Boolean;
            toRuleSet              : association[1]    to ruleSet              on toRuleSet.rsId = rsId; /*In*/
            toUsersOwner           : association[1]    to users                on toUsersOwner.userId = owner; /*In*/
            toProcesses            : association[1]    to processes            on toProcesses.processId = processId; /*In*/
            toSubProcesses         : association[1]    to subProcesses         on toSubProcesses.subProcessId = subProcessId; /*In*/
            toUsersMonitor         : association[1]    to users                on toUsersMonitor.userId = monitor; /*In*/
            toTestsBusinessControl : association[0..*] to testsBusinessControl on toTestsBusinessControl.bcId = bcId; /*Out*/
    };

    /*@@layout{"layoutInfo":{"x":-789,"y":882.5}}*/
    entity testsBusinessControl {
        key tstId             : String(10); /*Association*/
        key bcId              : String(10); /*Association*/
            toTests           : association[1] to tests           on toTests.tstId = tstId; /*In*/
            toBusinessControl : association[1] to businessControl on toBusinessControl.bcId = bcId; /*In*/
    };
	
	    /*@@layout{"layoutInfo":{"x":-789,"y":882.5}}*/
    entity UST12 {
		MANDT		:Integer;
		key OBJCT	:String(60);
		key AUTH	:String(60);
		AKTPS		:String(60);
		Key FIELD		:String(60);
		Key VON			:String(60);
		BIS			:String(60);
	};	
};  